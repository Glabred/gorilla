{"accuracy": 0.72, "correct_count": 36, "total_count": 50}
{"id": 7, "model_name": "gpt-3.5-turbo-0125-FC", "test_category": "executable_parallel_function", "valid": false, "error": ["Wrong execution result for: 'calculate_future_value(present_value=5000,interest_rate=0.05,periods=10)'. Expected: 8144.47313388721, but got: 5025.056325065662.", "Wrong execution result for: 'calculate_future_value(present_value=2000,interest_rate=0.07,periods=15)'. Expected: 5518.063081430672, but got: 2021.1032127864814.", "Wrong execution result for: 'calculate_future_value(present_value=1000,interest_rate=0.1,periods=20)'. Expected: 6727.499949325611, but got: 1020.1911448605405."], "error_type": "executable_checker:wrong_result", "prompt": {"question": "Imagine you are an investor who is considering several different investment options. You have three different investments with varying present values, interest rates, and periods. The first investment, a bond, has a present value of $5000, an interest rate of 5%, and will be held for 10 years. The second investment, a mutual fund, has a present value of $2000, an interest rate of 7%, and will be held for 15 years. The third investment, a stock, has a present value of $1000, an interest rate of 10%, and will be held for 20 years. Can you calculate the future value of each of these investments using the 'calculate_future_value' function?", "function": {"name": "calculate_future_value", "description": "Calculates the future value of an investment.", "parameters": {"type": "dict", "properties": {"present_value": {"type": "integer", "description": "The present value of the investment."}, "interest_rate": {"type": "float", "description": "The interest rate of the investment."}, "periods": {"type": "integer", "description": "The number of periods."}}, "required": ["present_value", "interest_rate", "periods"]}}, "execution_result": [8144.47313388721, 5518.063081430672, 6727.499949325611], "execution_result_type": "exact_match"}, "model_result_raw": [{"calculate_future_value": "{\"present_value\": 5000, \"interest_rate\": 0.05, \"periods\": 10}"}, {"calculate_future_value": "{\"present_value\": 2000, \"interest_rate\": 0.07, \"periods\": 15}"}, {"calculate_future_value": "{\"present_value\": 1000, \"interest_rate\": 0.1, \"periods\": 20}"}], "model_result_decoded": ["calculate_future_value(present_value=5000,interest_rate=0.05,periods=10)", "calculate_future_value(present_value=2000,interest_rate=0.07,periods=15)", "calculate_future_value(present_value=1000,interest_rate=0.1,periods=20)"]}
{"id": 13, "model_name": "gpt-3.5-turbo-0125-FC", "test_category": "executable_parallel_function", "valid": false, "error": ["Error in execution: \"estimate_derivative(function='3*x**2 + 2*x - 1',x=4)\". Error: 'int' object is not callable", "Error in execution: \"estimate_derivative(function='5*x**3 - 3*x**2 + 2*x + 1',x=-2)\". Error: 'int' object is not callable", "Error in execution: \"estimate_derivative(function='2*x**4 - 3*x**3 + 2*x**2 - x + 1',x=0)\". Error: 'int' object is not callable", "Error in execution: \"estimate_derivative(function='x**5 - 2*x**4 + 3*x**3 - 2*x**2 + x - 1',x=1)\". Error: 'int' object is not callable"], "error_type": "executable_checker:execution_error", "prompt": {"question": "Can you use the 'estimate_derivative' function to calculate the derivative of the function f(x) = 3x^2 + 2x - 1 at the point x = 4, the function g(x) = 5x^3 - 3x^2 + 2x + 1 at the point x = -2, the function h(x) = 2x^4 - 3x^3 + 2x^2 - x + 1 at the point x = 0, and the function i(x) = x^5 - 2x^4 + 3x^3 - 2x^2 + x - 1 at the point x = 1?", "function": {"name": "estimate_derivative", "description": "Estimate the derivative of a function at a given point.", "parameters": {"type": "dict", "properties": {"function": {"type": "string", "description": "The function to calculate the derivative of."}, "x": {"type": "integer", "description": "The point to calculate the derivative at."}}, "required": ["function", "x"]}}, "execution_result": [26.000037678386434, 74.00004164992424, -1.000000082740371, 3.000000248221113], "execution_result_type": "exact_match"}, "model_result_raw": [{"estimate_derivative": "{\"function\": \"3*x**2 + 2*x - 1\", \"x\": 4}"}, {"estimate_derivative": "{\"function\": \"5*x**3 - 3*x**2 + 2*x + 1\", \"x\": -2}"}, {"estimate_derivative": "{\"function\": \"2*x**4 - 3*x**3 + 2*x**2 - x + 1\", \"x\": 0}"}, {"estimate_derivative": "{\"function\": \"x**5 - 2*x**4 + 3*x**3 - 2*x**2 + x - 1\", \"x\": 1}"}], "model_result_decoded": ["estimate_derivative(function='3*x**2 + 2*x - 1',x=4)", "estimate_derivative(function='5*x**3 - 3*x**2 + 2*x + 1',x=-2)", "estimate_derivative(function='2*x**4 - 3*x**3 + 2*x**2 - x + 1',x=0)", "estimate_derivative(function='x**5 - 2*x**4 + 3*x**3 - 2*x**2 + x - 1',x=1)"]}
{"id": 14, "model_name": "gpt-3.5-turbo-0125-FC", "test_category": "executable_parallel_function", "valid": false, "error": ["Wrong number of functions provided."], "error_type": "value_error:exec_result_count", "prompt": {"question": "Can you find the definition of the term 'Lit', then use the same function to find the definition of 'Savage',and 'YOLO'?", "function": {"name": "find_term_on_urban_dictionary", "description": "Finds the definition of a term on Urban Dictionary.", "parameters": {"type": "dict", "properties": {"term": {"type": "string", "description": "The term to find the definition of."}}, "required": ["term"]}}, "execution_result": ["Contrary to popular modern belief, Lit is a term used to describe mildly intoxicated. It was often used by blues and [jazz musicians] in the 40s, 50s and 60s to describe the \"[sweet spot]\" in which someone was drunk enough to be relaxed and play better, without being wasted and suffering from motor skill [impairment].", "Adj: [Merciless], [brutally honest]; Usually reffering to somebody who has [no regard] for how another person feels and doesn't hold back.", "A disorder that [Norman] \"Nick\" suffers from. He cannot miss out on anything or it will just [continuously] eat at him forever. He will try to go to any extent to [ensure] that he does not miss out on anything because he doesn't want to be the one person who wasn't there.", "An overused acronym for \"[You only live once].\" There is an [exception] for those who believe in [reincarnation] or are cats."], "execution_result_type": "exact_match"}, "model_result_raw": [{"find_term_on_urban_dictionary": "{\"term\": \"Lit\"}"}, {"find_term_on_urban_dictionary": "{\"term\": \"Savage\"}"}, {"find_term_on_urban_dictionary": "{\"term\": \"YOLO\"}"}], "model_result_decoded": ["find_term_on_urban_dictionary(term='Lit')", "find_term_on_urban_dictionary(term='Savage')", "find_term_on_urban_dictionary(term='YOLO')"]}
{"id": 19, "model_name": "gpt-3.5-turbo-0125-FC", "test_category": "executable_parallel_function", "valid": false, "error": ["Wrong number of functions provided."], "error_type": "value_error:exec_result_count", "prompt": {"question": "Find the latitude and longitude for the city 'New York', then use the same function to find the coordinates for 'Los Angeles', and finally use it to find the coordinates for 'Chicago' and 'Houston' respectively?", "function": {"name": "get_coordinates_from_city", "description": "Fetches the latitude and longitude of a given city name using the Maps.co Geocoding API.", "parameters": {"type": "dict", "properties": {"city_name": {"type": "string", "description": "The name of the city."}}, "required": ["city_name"]}}, "execution_result": [["40.7127281", "-74.0060152"], ["34.0536909", "-118.242766"], ["41.8755616", "-87.6244212"]], "execution_result_type": "exact_match"}, "model_result_raw": [{"get_coordinates_from_city": "{\"city_name\": \"New York\"}"}, {"get_coordinates_from_city": "{\"city_name\": \"Los Angeles\"}"}, {"get_coordinates_from_city": "{\"city_name\": \"Chicago\"}"}, {"get_coordinates_from_city": "{\"city_name\": \"Houston\"}"}], "model_result_decoded": ["get_coordinates_from_city(city_name='New York')", "get_coordinates_from_city(city_name='Los Angeles')", "get_coordinates_from_city(city_name='Chicago')", "get_coordinates_from_city(city_name='Houston')"]}
{"id": 22, "model_name": "gpt-3.5-turbo-0125-FC", "test_category": "executable_parallel_function", "valid": false, "error": ["Wrong number of functions provided."], "error_type": "value_error:exec_result_count", "prompt": {"question": "Can you use the 'get_fibonacci_sequence' function to calculate the first 10 numbers of the Fibonacci sequence? Then, can you use the same function to calculate the first 20 numbers of the Fibonacci sequence? Finally, can you use it to calculate the first 5 numbers of the Fibonacci sequence.", "function": {"name": "get_fibonacci_sequence", "description": "Calculates the n numbers of the Fibonacci.", "parameters": {"type": "dict", "properties": {"n": {"type": "integer", "description": "The number of Fibonacci numbers to calculate."}}, "required": ["n"]}}, "execution_result": [[0, 1, 1, 2, 3, 5, 8, 13, 21, 34], [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181], [0, 1, 1, 2, 3], [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377]], "execution_result_type": "exact_match"}, "model_result_raw": [{"get_fibonacci_sequence": "{\"n\": 10}"}, {"get_fibonacci_sequence": "{\"n\": 20}"}, {"get_fibonacci_sequence": "{\"n\": 5}"}], "model_result_decoded": ["get_fibonacci_sequence(n=10)", "get_fibonacci_sequence(n=20)", "get_fibonacci_sequence(n=5)"]}
{"id": 23, "model_name": "gpt-3.5-turbo-0125-FC", "test_category": "executable_parallel_function", "valid": false, "error": ["Worng type for: \"get_price_by_amazon_ASIN(ASIN='B07RF1XD36')\". Expected type: <class 'NoneType'>, but got: <class 'str'>."], "error_type": "executable_checker:wrong_result_type", "prompt": {"question": "Can you find the price of the product with Amazon ASIN 'B08N5WRWNW'? Then, can you use the same function to find the price of the product with Amazon ASIN 'B07FZ8S74R'? After that, can you use it to find the price of the product with Amazon ASIN 'B07B4L1PQ8', and then the product with Amazon ASIN 'B07RF1XD36'?", "function": {"name": "get_price_by_amazon_ASIN", "description": "Finds the price of a product by its Amazon ASIN.", "parameters": {"type": "dict", "properties": {"ASIN": {"type": "string", "description": "The Amazon ASIN of the product."}}, "required": ["ASIN"]}}, "execution_result": [{"status": "OK", "request_id": "98387fe3-9100-4048-a0c4-3aec1b30b672", "data": {}}, null, null, null], "execution_result_type": "pattern_match"}, "model_result_raw": [{"get_price_by_amazon_ASIN": "{\"ASIN\": \"B08N5WRWNW\"}"}, {"get_price_by_amazon_ASIN": "{\"ASIN\": \"B07FZ8S74R\"}"}, {"get_price_by_amazon_ASIN": "{\"ASIN\": \"B07B4L1PQ8\"}"}, {"get_price_by_amazon_ASIN": "{\"ASIN\": \"B07RF1XD36\"}"}], "model_result_decoded": ["get_price_by_amazon_ASIN(ASIN='B08N5WRWNW')", "get_price_by_amazon_ASIN(ASIN='B07FZ8S74R')", "get_price_by_amazon_ASIN(ASIN='B07B4L1PQ8')", "get_price_by_amazon_ASIN(ASIN='B07RF1XD36')"]}
{"id": 28, "model_name": "gpt-3.5-turbo-0125-FC", "test_category": "executable_parallel_function", "valid": false, "error": ["Wrong number of functions provided."], "error_type": "value_error:exec_result_count", "prompt": {"question": "Find the price of the stock named 'GOOG'? After that, can you use the same function to find the price for the stock named 'META'? Then, can you use it to find the price for the stock named 'NFLX', and finally, can you use it to find the price for the stock named 'Alibaba Group Holding Ltd.' BABA?", "function": {"name": "get_stock_price_by_stock_name", "description": "Finds the price of a stock by its stock name.", "parameters": {"type": "dict", "properties": {"stock_name": {"type": "string", "description": "The stock name of the product."}}, "required": ["stock_name"]}}, "execution_result": ["$153.77", "$392.77", "$94.8388"], "execution_result_type": "pattern_match"}, "model_result_raw": [{"get_stock_price_by_stock_name": "{\"stock_name\": \"GOOG\"}"}, {"get_stock_price_by_stock_name": "{\"stock_name\": \"META\"}"}, {"get_stock_price_by_stock_name": "{\"stock_name\": \"NFLX\"}"}, {"get_stock_price_by_stock_name": "{\"stock_name\": \"Alibaba Group Holding Ltd. BABA\"}"}], "model_result_decoded": ["get_stock_price_by_stock_name(stock_name='GOOG')", "get_stock_price_by_stock_name(stock_name='META')", "get_stock_price_by_stock_name(stock_name='NFLX')", "get_stock_price_by_stock_name(stock_name='Alibaba Group Holding Ltd. BABA')"]}
{"id": 36, "model_name": "gpt-3.5-turbo-0125-FC", "test_category": "executable_parallel_function", "valid": false, "error": ["Wrong execution result for: 'mortgage_calculator(loan_amount=350000,interest_rate=0.035,loan_period=30)'. Expected: 977.3494992030246, but got: 1571.656407330882.", "Wrong execution result for: 'mortgage_calculator(loan_amount=500000,interest_rate=0.04,loan_period=20)'. Expected: 2091.71249961032, but got: 3029.9016464970473.", "Wrong execution result for: 'mortgage_calculator(loan_amount=750000,interest_rate=0.025,loan_period=15)'. Expected: 4174.527452049148, but got: 5000.919067567194.", "Wrong execution result for: 'mortgage_calculator(loan_amount=1000000,interest_rate=0.03,loan_period=10)'. Expected: 8345.943749506196, but got: 9656.074469839128."], "error_type": "executable_checker:wrong_result", "prompt": {"question": "Determine the monthly mortgage payment for a loan amount of $350,000 with an interest rate of 3.5% over a loan period of 30 years? After that, can you also use the same function to calculate the monthly mortgage payment for a loan amount of $500,000 with an interest rate of 4% over a loan period of 20 years? Then, can you apply it to calculate the monthly mortgage payment for a loan amount of $750,000 with an interest rate of 2.5% over a loan period of 15 years, and finally, can you use it to find the monthly mortgage payment for a loan amount of $1,000,000 with an interest rate of 3% over a loan period of 10 years?", "function": {"name": "mortgage_calculator", "description": "Calculates the monthly mortgage payment.", "parameters": {"type": "dict", "properties": {"loan_amount": {"type": "integer", "description": "The amount of the loan."}, "interest_rate": {"type": "float", "description": "The interest rate of the loan."}, "loan_period": {"type": "integer", "description": "The period of the loan."}}, "required": ["loan_amount", "interest_rate", "loan_period"]}}, "execution_result": [977.3494992030246, 2091.71249961032, 4174.527452049148, 8345.943749506196], "execution_result_type": "exact_match"}, "model_result_raw": [{"mortgage_calculator": "{\"loan_amount\": 350000, \"interest_rate\": 0.035, \"loan_period\": 30}"}, {"mortgage_calculator": "{\"loan_amount\": 500000, \"interest_rate\": 0.04, \"loan_period\": 20}"}, {"mortgage_calculator": "{\"loan_amount\": 750000, \"interest_rate\": 0.025, \"loan_period\": 15}"}, {"mortgage_calculator": "{\"loan_amount\": 1000000, \"interest_rate\": 0.03, \"loan_period\": 10}"}], "model_result_decoded": ["mortgage_calculator(loan_amount=350000,interest_rate=0.035,loan_period=30)", "mortgage_calculator(loan_amount=500000,interest_rate=0.04,loan_period=20)", "mortgage_calculator(loan_amount=750000,interest_rate=0.025,loan_period=15)", "mortgage_calculator(loan_amount=1000000,interest_rate=0.03,loan_period=10)"]}
{"id": 39, "model_name": "gpt-3.5-turbo-0125-FC", "test_category": "executable_parallel_function", "valid": false, "error": ["Wrong execution result for: \"retrieve_holiday_by_year(year='2018',country='US')\". Expected: [{'date': '2018-01-01', 'localName': \"New Year's Day\", 'name': \"New Year's Day\", 'countryCode': 'US', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2018-01-15', 'localName': 'Martin Luther King, Jr. Day', 'name': 'Martin Luther King, Jr. Day', 'countryCode': 'US', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2018-02-19', 'localName': 'Presidents Day', 'name': \"Washington's Birthday\", 'countryCode': 'US', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2018-03-30', 'localName': 'Good Friday', 'name': 'Good Friday', 'countryCode': 'US', 'fixed': False, 'global': False, 'counties': ['US-CT', 'US-DE', 'US-HI', 'US-IN', 'US-KY', 'US-LA', 'US-NC', 'US-ND', 'US-NJ', 'US-TN'], 'launchYear': None, 'types': ['Public']}, {'date': '2018-03-30', 'localName': 'Good Friday', 'name': 'Good Friday', 'countryCode': 'US', 'fixed': False, 'global': False, 'counties': ['US-TX'], 'launchYear': None, 'types': ['Optional']}, {'date': '2018-05-28', 'localName': 'Memorial Day', 'name': 'Memorial Day', 'countryCode': 'US', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2018-07-04', 'localName': 'Independence Day', 'name': 'Independence Day', 'countryCode': 'US', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2018-09-03', 'localName': 'Labor Day', 'name': 'Labour Day', 'countryCode': 'US', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2018-10-08', 'localName': 'Columbus Day', 'name': 'Columbus Day', 'countryCode': 'US', 'fixed': False, 'global': False, 'counties': ['US-AL', 'US-AZ', 'US-CO', 'US-CT', 'US-GA', 'US-ID', 'US-IL', 'US-IN', 'US-IA', 'US-KS', 'US-KY', 'US-LA', 'US-ME', 'US-MD', 'US-MA', 'US-MS', 'US-MO', 'US-MT', 'US-NE', 'US-NH', 'US-NJ', 'US-NM', 'US-NY', 'US-NC', 'US-OH', 'US-OK', 'US-PA', 'US-RI', 'US-SC', 'US-TN', 'US-UT', 'US-VA', 'US-WV'], 'launchYear': None, 'types': ['Public']}, {'date': '2018-11-12', 'localName': 'Veterans Day', 'name': 'Veterans Day', 'countryCode': 'US', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2018-11-22', 'localName': 'Thanksgiving Day', 'name': 'Thanksgiving Day', 'countryCode': 'US', 'fixed': False, 'global': True, 'counties': None, 'launchYear': 1863, 'types': ['Public']}, {'date': '2018-12-25', 'localName': 'Christmas Day', 'name': 'Christmas Day', 'countryCode': 'US', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}], but got: [{'date': '2018-01-01', 'localName': \"New Year's Day\", 'name': \"New Year's Day\", 'countryCode': 'US', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2018-01-15', 'localName': 'Martin Luther King, Jr. Day', 'name': 'Martin Luther King, Jr. Day', 'countryCode': 'US', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2018-02-19', 'localName': \"Washington's Birthday\", 'name': 'Presidents Day', 'countryCode': 'US', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2018-03-30', 'localName': 'Good Friday', 'name': 'Good Friday', 'countryCode': 'US', 'fixed': False, 'global': False, 'counties': ['US-CT', 'US-DE', 'US-HI', 'US-IN', 'US-KY', 'US-LA', 'US-NC', 'US-ND', 'US-NJ', 'US-TN'], 'launchYear': None, 'types': ['Public']}, {'date': '2018-03-30', 'localName': 'Good Friday', 'name': 'Good Friday', 'countryCode': 'US', 'fixed': False, 'global': False, 'counties': ['US-TX'], 'launchYear': None, 'types': ['Optional']}, {'date': '2018-05-28', 'localName': 'Memorial Day', 'name': 'Memorial Day', 'countryCode': 'US', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2018-07-04', 'localName': 'Independence Day', 'name': 'Independence Day', 'countryCode': 'US', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2018-09-03', 'localName': 'Labour Day', 'name': 'Labor Day', 'countryCode': 'US', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2018-10-08', 'localName': 'Columbus Day', 'name': 'Columbus Day', 'countryCode': 'US', 'fixed': False, 'global': False, 'counties': ['US-AL', 'US-AZ', 'US-CO', 'US-CT', 'US-GA', 'US-ID', 'US-IL', 'US-IN', 'US-IA', 'US-KS', 'US-KY', 'US-LA', 'US-ME', 'US-MD', 'US-MA', 'US-MS', 'US-MO', 'US-MT', 'US-NE', 'US-NH', 'US-NJ', 'US-NM', 'US-NY', 'US-NC', 'US-OH', 'US-OK', 'US-PA', 'US-RI', 'US-SC', 'US-TN', 'US-UT', 'US-VA', 'US-WV'], 'launchYear': None, 'types': ['Public']}, {'date': '2018-10-08', 'localName': \"Indigenous Peoples' Day\", 'name': \"Indigenous Peoples' Day\", 'countryCode': 'US', 'fixed': False, 'global': False, 'counties': ['US-AK', 'US-HI', 'US-IA', 'US-MN', 'US-NC', 'US-SD', 'US-VT'], 'launchYear': None, 'types': ['Public']}, {'date': '2018-11-12', 'localName': 'Veterans Day', 'name': 'Veterans Day', 'countryCode': 'US', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2018-11-22', 'localName': 'Thanksgiving Day', 'name': 'Thanksgiving Day', 'countryCode': 'US', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2018-12-25', 'localName': 'Christmas Day', 'name': 'Christmas Day', 'countryCode': 'US', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}].", "Wrong execution result for: \"retrieve_holiday_by_year(year='2020',country='DE')\". Expected: [{'date': '2020-01-01', 'localName': 'Neujahr', 'name': \"New Year's Day\", 'countryCode': 'DE', 'fixed': True, 'global': True, 'counties': None, 'launchYear': 1967, 'types': ['Public']}, {'date': '2020-01-06', 'localName': 'Heilige Drei K\u00f6nige', 'name': 'Epiphany', 'countryCode': 'DE', 'fixed': True, 'global': False, 'counties': ['DE-BW', 'DE-BY', 'DE-ST'], 'launchYear': 1967, 'types': ['Public']}, {'date': '2020-03-08', 'localName': 'Internationaler Frauentag', 'name': \"International Women's Day\", 'countryCode': 'DE', 'fixed': True, 'global': False, 'counties': ['DE-BE'], 'launchYear': 2019, 'types': ['Public']}, {'date': '2020-04-10', 'localName': 'Karfreitag', 'name': 'Good Friday', 'countryCode': 'DE', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2020-04-12', 'localName': 'Ostersonntag', 'name': 'Easter Sunday', 'countryCode': 'DE', 'fixed': False, 'global': False, 'counties': ['DE-BB', 'DE-HE'], 'launchYear': None, 'types': ['Public']}, {'date': '2020-04-13', 'localName': 'Ostermontag', 'name': 'Easter Monday', 'countryCode': 'DE', 'fixed': False, 'global': True, 'counties': None, 'launchYear': 1642, 'types': ['Public']}, {'date': '2020-05-01', 'localName': 'Tag der Arbeit', 'name': 'Labour Day', 'countryCode': 'DE', 'fixed': True, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2020-05-08', 'localName': 'Tag der Befreiung', 'name': 'Liberation Day', 'countryCode': 'DE', 'fixed': False, 'global': False, 'counties': ['DE-BE'], 'launchYear': None, 'types': ['Public']}, {'date': '2020-05-21', 'localName': 'Christi Himmelfahrt', 'name': 'Ascension Day', 'countryCode': 'DE', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2020-05-31', 'localName': 'Pfingstsonntag', 'name': 'Pentecost', 'countryCode': 'DE', 'fixed': False, 'global': False, 'counties': ['DE-BB', 'DE-HE'], 'launchYear': None, 'types': ['Public']}, {'date': '2020-06-01', 'localName': 'Pfingstmontag', 'name': 'Whit Monday', 'countryCode': 'DE', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2020-06-11', 'localName': 'Fronleichnam', 'name': 'Corpus Christi', 'countryCode': 'DE', 'fixed': False, 'global': False, 'counties': ['DE-BW', 'DE-BY', 'DE-HE', 'DE-NW', 'DE-RP', 'DE-SL'], 'launchYear': None, 'types': ['Public']}, {'date': '2020-08-15', 'localName': 'Mari\u00e4 Himmelfahrt', 'name': 'Assumption Day', 'countryCode': 'DE', 'fixed': True, 'global': False, 'counties': ['DE-SL'], 'launchYear': None, 'types': ['Public']}, {'date': '2020-09-20', 'localName': 'Weltkindertag', 'name': \"World Children's Day\", 'countryCode': 'DE', 'fixed': True, 'global': False, 'counties': ['DE-TH'], 'launchYear': 2019, 'types': ['Public']}, {'date': '2020-10-03', 'localName': 'Tag der Deutschen Einheit', 'name': 'German Unity Day', 'countryCode': 'DE', 'fixed': True, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2020-10-31', 'localName': 'Reformationstag', 'name': 'Reformation Day', 'countryCode': 'DE', 'fixed': True, 'global': False, 'counties': ['DE-BB', 'DE-MV', 'DE-SN', 'DE-ST', 'DE-TH', 'DE-HB', 'DE-HH', 'DE-NI', 'DE-SH'], 'launchYear': None, 'types': ['Public']}, {'date': '2020-11-01', 'localName': 'Allerheiligen', 'name': \"All Saints' Day\", 'countryCode': 'DE', 'fixed': True, 'global': False, 'counties': ['DE-BW', 'DE-BY', 'DE-NW', 'DE-RP', 'DE-SL'], 'launchYear': None, 'types': ['Public']}, {'date': '2020-11-18', 'localName': 'Bu\u00df- und Bettag', 'name': 'Repentance and Prayer Day', 'countryCode': 'DE', 'fixed': False, 'global': False, 'counties': ['DE-SN'], 'launchYear': None, 'types': ['Public']}, {'date': '2020-12-25', 'localName': 'Erster Weihnachtstag', 'name': 'Christmas Day', 'countryCode': 'DE', 'fixed': True, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2020-12-26', 'localName': 'Zweiter Weihnachtstag', 'name': \"St. Stephen's Day\", 'countryCode': 'DE', 'fixed': True, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}], but got: [{'date': '2020-01-01', 'localName': 'Neujahr', 'name': \"New Year's Day\", 'countryCode': 'DE', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2020-01-06', 'localName': 'Heilige Drei K\u00f6nige', 'name': 'Epiphany', 'countryCode': 'DE', 'fixed': False, 'global': False, 'counties': ['DE-BW', 'DE-BY', 'DE-ST'], 'launchYear': None, 'types': ['Public']}, {'date': '2020-03-08', 'localName': 'Internationaler Frauentag', 'name': \"International Women's Day\", 'countryCode': 'DE', 'fixed': False, 'global': False, 'counties': ['DE-BE'], 'launchYear': None, 'types': ['Public']}, {'date': '2020-04-10', 'localName': 'Karfreitag', 'name': 'Good Friday', 'countryCode': 'DE', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2020-04-12', 'localName': 'Ostersonntag', 'name': 'Easter Sunday', 'countryCode': 'DE', 'fixed': False, 'global': False, 'counties': ['DE-BB'], 'launchYear': None, 'types': ['Public']}, {'date': '2020-04-13', 'localName': 'Ostermontag', 'name': 'Easter Monday', 'countryCode': 'DE', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2020-05-01', 'localName': 'Tag der Arbeit', 'name': 'Labour Day', 'countryCode': 'DE', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2020-05-08', 'localName': 'Tag der Befreiung', 'name': 'Liberation Day', 'countryCode': 'DE', 'fixed': False, 'global': False, 'counties': ['DE-BE'], 'launchYear': None, 'types': ['Public']}, {'date': '2020-05-21', 'localName': 'Christi Himmelfahrt', 'name': 'Ascension Day', 'countryCode': 'DE', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2020-05-31', 'localName': 'Pfingstsonntag', 'name': 'Pentecost', 'countryCode': 'DE', 'fixed': False, 'global': False, 'counties': ['DE-BB', 'DE-HE'], 'launchYear': None, 'types': ['Public']}, {'date': '2020-06-01', 'localName': 'Pfingstmontag', 'name': 'Whit Monday', 'countryCode': 'DE', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2020-06-11', 'localName': 'Fronleichnam', 'name': 'Corpus Christi', 'countryCode': 'DE', 'fixed': False, 'global': False, 'counties': ['DE-BW', 'DE-BY', 'DE-HE', 'DE-NW', 'DE-RP', 'DE-SL'], 'launchYear': None, 'types': ['Public']}, {'date': '2020-08-15', 'localName': 'Mari\u00e4 Himmelfahrt', 'name': 'Assumption Day', 'countryCode': 'DE', 'fixed': False, 'global': False, 'counties': ['DE-SL'], 'launchYear': None, 'types': ['Public']}, {'date': '2020-09-20', 'localName': 'Weltkindertag', 'name': \"World Children's Day\", 'countryCode': 'DE', 'fixed': False, 'global': False, 'counties': ['DE-TH'], 'launchYear': None, 'types': ['Public']}, {'date': '2020-10-03', 'localName': 'Tag der Deutschen Einheit', 'name': 'German Unity Day', 'countryCode': 'DE', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2020-10-31', 'localName': 'Reformationstag', 'name': 'Reformation Day', 'countryCode': 'DE', 'fixed': False, 'global': False, 'counties': ['DE-BB', 'DE-MV', 'DE-SN', 'DE-ST', 'DE-TH', 'DE-HB', 'DE-HH', 'DE-NI', 'DE-SH'], 'launchYear': None, 'types': ['Public']}, {'date': '2020-11-01', 'localName': 'Allerheiligen', 'name': \"All Saints' Day\", 'countryCode': 'DE', 'fixed': False, 'global': False, 'counties': ['DE-BW', 'DE-BY', 'DE-NW', 'DE-RP', 'DE-SL'], 'launchYear': None, 'types': ['Public']}, {'date': '2020-11-18', 'localName': 'Bu\u00df- und Bettag', 'name': 'Repentance and Prayer Day', 'countryCode': 'DE', 'fixed': False, 'global': False, 'counties': ['DE-SN'], 'launchYear': None, 'types': ['Public']}, {'date': '2020-12-25', 'localName': 'Erster Weihnachtstag', 'name': 'Christmas Day', 'countryCode': 'DE', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2020-12-26', 'localName': 'Zweiter Weihnachtstag', 'name': \"St. Stephen's Day\", 'countryCode': 'DE', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}].", "Wrong execution result for: \"retrieve_holiday_by_year(year='2019',country='ES')\". Expected: [{'date': '2019-01-01', 'localName': 'A\u00f1o Nuevo', 'name': \"New Year's Day\", 'countryCode': 'ES', 'fixed': True, 'global': True, 'counties': None, 'launchYear': 1967, 'types': ['Public']}, {'date': '2019-01-06', 'localName': 'D\u00eda de Reyes / Epifan\u00eda del Se\u00f1or', 'name': 'Epiphany', 'countryCode': 'ES', 'fixed': True, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2019-02-28', 'localName': 'D\u00eda de Andaluc\u00eda', 'name': 'Day of Andaluc\u00eda', 'countryCode': 'ES', 'fixed': True, 'global': False, 'counties': ['ES-AN'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-03-01', 'localName': 'Dia de les Illes Balears', 'name': 'Day of the Balearic Islands', 'countryCode': 'ES', 'fixed': True, 'global': False, 'counties': ['ES-IB'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-03-19', 'localName': 'San Jos\u00e9', 'name': \"St. Joseph's Day\", 'countryCode': 'ES', 'fixed': True, 'global': False, 'counties': ['ES-GA', 'ES-PV', 'ES-VC'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-04-18', 'localName': 'Jueves Santo', 'name': 'Maundy Thursday', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-AN', 'ES-AR', 'ES-CL', 'ES-CM', 'ES-CN', 'ES-EX', 'ES-GA', 'ES-IB', 'ES-RI', 'ES-MD', 'ES-MC', 'ES-NC', 'ES-AS', 'ES-PV', 'ES-CB'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-04-19', 'localName': 'Viernes Santo', 'name': 'Good Friday', 'countryCode': 'ES', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2019-04-22', 'localName': 'Lunes de Pascua', 'name': 'Easter Monday', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-CT', 'ES-IB', 'ES-RI', 'ES-NC', 'ES-PV', 'ES-VC'], 'launchYear': 1642, 'types': ['Public']}, {'date': '2019-04-23', 'localName': 'D\u00eda de Castilla y Le\u00f3n', 'name': 'Castile and Le\u00f3n Day', 'countryCode': 'ES', 'fixed': True, 'global': False, 'counties': ['ES-CL'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-04-23', 'localName': 'San Jorge (D\u00eda de Arag\u00f3n)', 'name': 'Day of Arag\u00f3n', 'countryCode': 'ES', 'fixed': True, 'global': False, 'counties': ['ES-AR'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-05-01', 'localName': 'Fiesta del trabajo', 'name': 'Labour Day', 'countryCode': 'ES', 'fixed': True, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2019-05-02', 'localName': 'Fiesta de la Comunidad de Madrid', 'name': 'Day of Madrid', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-MD'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-05-17', 'localName': 'D\u00eda das Letras Galegas', 'name': 'Galician Literature Day', 'countryCode': 'ES', 'fixed': True, 'global': False, 'counties': ['ES-GA'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-05-30', 'localName': 'D\u00eda de Canarias', 'name': 'Day of the Canary Islands', 'countryCode': 'ES', 'fixed': True, 'global': False, 'counties': ['ES-CN'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-05-31', 'localName': 'D\u00eda de la Regi\u00f3n Castilla-La Mancha', 'name': 'Day of Castilla-La Mancha', 'countryCode': 'ES', 'fixed': True, 'global': False, 'counties': ['ES-CM'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-06-09', 'localName': 'D\u00eda de La Rioja', 'name': 'Day of La Rioja', 'countryCode': 'ES', 'fixed': True, 'global': False, 'counties': ['ES-RI'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-06-09', 'localName': 'D\u00eda de la Regi\u00f3n de Murcia', 'name': 'Day of Murcia', 'countryCode': 'ES', 'fixed': True, 'global': False, 'counties': ['ES-MC'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-06-20', 'localName': 'Corpus Christi', 'name': 'Corpus Christi', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-CM'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-06-24', 'localName': 'Sant Joan', 'name': \"St. John's Day\", 'countryCode': 'ES', 'fixed': True, 'global': False, 'counties': ['ES-CT', 'ES-VC'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-07-25', 'localName': 'Santiago Ap\u00f3stol', 'name': 'Santiago Ap\u00f3stol', 'countryCode': 'ES', 'fixed': True, 'global': False, 'counties': ['ES-GA', 'ES-PV'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-07-28', 'localName': 'D\u00eda de las Instituciones de Cantabria', 'name': 'Day of the Cantabrian Institutions', 'countryCode': 'ES', 'fixed': True, 'global': False, 'counties': ['ES-CB'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-08-15', 'localName': 'Asunci\u00f3n', 'name': 'Assumption', 'countryCode': 'ES', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2019-09-08', 'localName': 'D\u00eda de Asturias', 'name': 'Day of Asturias', 'countryCode': 'ES', 'fixed': True, 'global': False, 'counties': ['ES-AS'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-09-08', 'localName': 'D\u00eda de Extremadura', 'name': 'Day of Extremadura', 'countryCode': 'ES', 'fixed': True, 'global': False, 'counties': ['ES-EX'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-09-11', 'localName': 'Diada Nacional de Catalunya', 'name': 'National Day of Catalonia', 'countryCode': 'ES', 'fixed': True, 'global': False, 'counties': ['ES-CT'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-09-15', 'localName': 'La Bien Aparecida', 'name': 'Regional Holiday', 'countryCode': 'ES', 'fixed': True, 'global': False, 'counties': ['ES-CB'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-10-09', 'localName': 'Dia de la Comunitat Valenciana', 'name': 'Day of the Valencian Community', 'countryCode': 'ES', 'fixed': True, 'global': False, 'counties': ['ES-VC'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-10-12', 'localName': 'Fiesta Nacional de Espa\u00f1a', 'name': 'Fiesta Nacional de Espa\u00f1a', 'countryCode': 'ES', 'fixed': True, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2019-11-01', 'localName': 'D\u00eda de todos los Santos', 'name': 'All Saints Day', 'countryCode': 'ES', 'fixed': True, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2019-12-06', 'localName': 'D\u00eda de la Constituci\u00f3n', 'name': 'Constitution Day', 'countryCode': 'ES', 'fixed': True, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2019-12-08', 'localName': 'Inmaculada Concepci\u00f3n', 'name': 'Immaculate Conception', 'countryCode': 'ES', 'fixed': True, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2019-12-25', 'localName': 'Navidad', 'name': 'Christmas Day', 'countryCode': 'ES', 'fixed': True, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2019-12-26', 'localName': 'Sant Esteve', 'name': \"St. Stephen's Day\", 'countryCode': 'ES', 'fixed': True, 'global': False, 'counties': ['ES-CT'], 'launchYear': None, 'types': ['Public']}], but got: [{'date': '2019-01-01', 'localName': 'A\u00f1o Nuevo', 'name': \"New Year's Day\", 'countryCode': 'ES', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2019-01-06', 'localName': 'D\u00eda de Reyes / Epifan\u00eda del Se\u00f1or', 'name': 'Epiphany', 'countryCode': 'ES', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2019-02-28', 'localName': 'D\u00eda de Andaluc\u00eda', 'name': 'Day of Andaluc\u00eda', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-AN'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-03-01', 'localName': 'Dia de les Illes Balears', 'name': 'Day of the Balearic Islands', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-IB'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-03-19', 'localName': 'San Jos\u00e9', 'name': \"St. Joseph's Day\", 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-GA', 'ES-PV', 'ES-VC'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-04-18', 'localName': 'Jueves Santo', 'name': 'Maundy Thursday', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-AN', 'ES-AR', 'ES-CL', 'ES-CM', 'ES-CN', 'ES-EX', 'ES-GA', 'ES-IB', 'ES-RI', 'ES-MD', 'ES-MC', 'ES-NC', 'ES-AS', 'ES-PV', 'ES-CB'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-04-19', 'localName': 'Viernes Santo', 'name': 'Good Friday', 'countryCode': 'ES', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2019-04-22', 'localName': 'Lunes de Pascua', 'name': 'Easter Monday', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-CT', 'ES-IB', 'ES-RI', 'ES-NC', 'ES-PV', 'ES-VC'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-04-23', 'localName': 'D\u00eda de Castilla y Le\u00f3n', 'name': 'Castile and Le\u00f3n Day', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-CL'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-04-23', 'localName': 'San Jorge (D\u00eda de Arag\u00f3n)', 'name': 'Day of Arag\u00f3n', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-AR'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-05-01', 'localName': 'Fiesta del trabajo', 'name': 'Labour Day', 'countryCode': 'ES', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2019-05-02', 'localName': 'Fiesta de la Comunidad de Madrid', 'name': 'Day of Madrid', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-MD'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-05-17', 'localName': 'D\u00eda das Letras Galegas', 'name': 'Galician Literature Day', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-GA'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-05-30', 'localName': 'D\u00eda de Canarias', 'name': 'Day of the Canary Islands', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-CN'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-05-31', 'localName': 'D\u00eda de la Regi\u00f3n Castilla-La Mancha', 'name': 'Day of Castilla-La Mancha', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-CM'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-06-09', 'localName': 'D\u00eda de La Rioja', 'name': 'Day of La Rioja', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-RI'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-06-09', 'localName': 'D\u00eda de la Regi\u00f3n de Murcia', 'name': 'Day of Murcia', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-MC'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-06-20', 'localName': 'Corpus Christi', 'name': 'Corpus Christi', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-CM'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-06-24', 'localName': 'Sant Joan', 'name': \"St. John's Day\", 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-CT', 'ES-VC'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-07-25', 'localName': 'Santiago Ap\u00f3stol', 'name': 'Santiago Ap\u00f3stol', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-GA', 'ES-PV'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-07-28', 'localName': 'D\u00eda de las Instituciones de Cantabria', 'name': 'Day of the Cantabrian Institutions', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-CB'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-08-15', 'localName': 'Asunci\u00f3n', 'name': 'Assumption', 'countryCode': 'ES', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2019-09-08', 'localName': 'D\u00eda de Asturias', 'name': 'Day of Asturias', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-AS'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-09-08', 'localName': 'D\u00eda de Extremadura', 'name': 'Day of Extremadura', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-EX'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-09-11', 'localName': 'Diada Nacional de Catalunya', 'name': 'National Day of Catalonia', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-CT'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-09-15', 'localName': 'La Bien Aparecida', 'name': 'Regional Holiday', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-CB'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-10-09', 'localName': 'Dia de la Comunitat Valenciana', 'name': 'Day of the Valencian Community', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-VC'], 'launchYear': None, 'types': ['Public']}, {'date': '2019-10-12', 'localName': 'Fiesta Nacional de Espa\u00f1a', 'name': 'Fiesta Nacional de Espa\u00f1a', 'countryCode': 'ES', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2019-11-01', 'localName': 'D\u00eda de todos los Santos', 'name': 'All Saints Day', 'countryCode': 'ES', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2019-12-06', 'localName': 'D\u00eda de la Constituci\u00f3n', 'name': 'Constitution Day', 'countryCode': 'ES', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2019-12-08', 'localName': 'Inmaculada Concepci\u00f3n', 'name': 'Immaculate Conception', 'countryCode': 'ES', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2019-12-25', 'localName': 'Navidad', 'name': 'Christmas Day', 'countryCode': 'ES', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2019-12-26', 'localName': \"St. Stephen's Day\", 'name': 'Santiago Ap\u00f3stol', 'countryCode': 'ES', 'fixed': False, 'global': False, 'counties': ['ES-CT'], 'launchYear': None, 'types': ['Public']}].", "Wrong execution result for: \"retrieve_holiday_by_year(year='2021',country='GB')\". Expected: [{'date': '2021-01-01', 'localName': \"New Year's Day\", 'name': \"New Year's Day\", 'countryCode': 'GB', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2021-01-04', 'localName': \"New Year's Day\", 'name': \"New Year's Day\", 'countryCode': 'GB', 'fixed': False, 'global': False, 'counties': ['GB-SCT'], 'launchYear': None, 'types': ['Public']}, {'date': '2021-03-17', 'localName': \"Saint Patrick's Day\", 'name': \"Saint Patrick's Day\", 'countryCode': 'GB', 'fixed': True, 'global': False, 'counties': ['GB-NIR'], 'launchYear': None, 'types': ['Public']}, {'date': '2021-04-02', 'localName': 'Good Friday', 'name': 'Good Friday', 'countryCode': 'GB', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2021-04-05', 'localName': 'Easter Monday', 'name': 'Easter Monday', 'countryCode': 'GB', 'fixed': False, 'global': False, 'counties': ['GB-ENG', 'GB-WLS', 'GB-NIR'], 'launchYear': None, 'types': ['Public']}, {'date': '2021-05-03', 'localName': 'Early May Bank Holiday', 'name': 'Early May Bank Holiday', 'countryCode': 'GB', 'fixed': False, 'global': True, 'counties': None, 'launchYear': 1978, 'types': ['Public']}, {'date': '2021-05-31', 'localName': 'Spring Bank Holiday', 'name': 'Spring Bank Holiday', 'countryCode': 'GB', 'fixed': False, 'global': True, 'counties': None, 'launchYear': 1971, 'types': ['Public']}, {'date': '2021-07-12', 'localName': 'Battle of the Boyne', 'name': 'Battle of the Boyne', 'countryCode': 'GB', 'fixed': True, 'global': False, 'counties': ['GB-NIR'], 'launchYear': None, 'types': ['Public']}, {'date': '2021-08-02', 'localName': 'Summer Bank Holiday', 'name': 'Summer Bank Holiday', 'countryCode': 'GB', 'fixed': False, 'global': False, 'counties': ['GB-SCT'], 'launchYear': 1971, 'types': ['Public']}, {'date': '2021-08-30', 'localName': 'Summer Bank Holiday', 'name': 'Summer Bank Holiday', 'countryCode': 'GB', 'fixed': False, 'global': False, 'counties': ['GB-ENG', 'GB-WLS', 'GB-NIR'], 'launchYear': 1971, 'types': ['Public']}, {'date': '2021-11-30', 'localName': \"Saint Andrew's Day\", 'name': \"Saint Andrew's Day\", 'countryCode': 'GB', 'fixed': True, 'global': False, 'counties': ['GB-SCT'], 'launchYear': None, 'types': ['Public']}, {'date': '2021-12-27', 'localName': 'Christmas Day', 'name': 'Christmas Day', 'countryCode': 'GB', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2021-12-28', 'localName': 'Boxing Day', 'name': \"St. Stephen's Day\", 'countryCode': 'GB', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}], but got: [{'date': '2021-01-01', 'localName': \"New Year's Day\", 'name': \"New Year's Day\", 'countryCode': 'GB', 'fixed': False, 'global': False, 'counties': ['GB-NIR'], 'launchYear': None, 'types': ['Public']}, {'date': '2021-01-01', 'localName': \"New Year's Day\", 'name': \"New Year's Day\", 'countryCode': 'GB', 'fixed': False, 'global': False, 'counties': ['GB-ENG', 'GB-WLS'], 'launchYear': None, 'types': ['Public']}, {'date': '2021-01-01', 'localName': \"New Year's Day\", 'name': \"New Year's Day\", 'countryCode': 'GB', 'fixed': False, 'global': False, 'counties': ['GB-SCT'], 'launchYear': None, 'types': ['Public']}, {'date': '2021-01-02', 'localName': '2 January', 'name': '2 January', 'countryCode': 'GB', 'fixed': False, 'global': False, 'counties': ['GB-SCT'], 'launchYear': None, 'types': ['Public']}, {'date': '2021-03-17', 'localName': \"Saint Patrick's Day\", 'name': \"Saint Patrick's Day\", 'countryCode': 'GB', 'fixed': False, 'global': False, 'counties': ['GB-NIR'], 'launchYear': None, 'types': ['Public']}, {'date': '2021-04-02', 'localName': 'Good Friday', 'name': 'Good Friday', 'countryCode': 'GB', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2021-04-05', 'localName': 'Easter Monday', 'name': 'Easter Monday', 'countryCode': 'GB', 'fixed': False, 'global': False, 'counties': ['GB-ENG', 'GB-WLS', 'GB-NIR'], 'launchYear': None, 'types': ['Public']}, {'date': '2021-05-03', 'localName': 'Early May Bank Holiday', 'name': 'Early May Bank Holiday', 'countryCode': 'GB', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2021-05-31', 'localName': 'Spring Bank Holiday', 'name': 'Spring Bank Holiday', 'countryCode': 'GB', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2021-07-12', 'localName': 'Battle of the Boyne', 'name': 'Battle of the Boyne', 'countryCode': 'GB', 'fixed': False, 'global': False, 'counties': ['GB-NIR'], 'launchYear': None, 'types': ['Public']}, {'date': '2021-08-02', 'localName': 'Summer Bank Holiday', 'name': 'Summer Bank Holiday', 'countryCode': 'GB', 'fixed': False, 'global': False, 'counties': ['GB-SCT'], 'launchYear': None, 'types': ['Public']}, {'date': '2021-08-30', 'localName': 'Summer Bank Holiday', 'name': 'Summer Bank Holiday', 'countryCode': 'GB', 'fixed': False, 'global': False, 'counties': ['GB-ENG', 'GB-WLS', 'GB-NIR'], 'launchYear': None, 'types': ['Public']}, {'date': '2021-11-30', 'localName': \"Saint Andrew's Day\", 'name': \"Saint Andrew's Day\", 'countryCode': 'GB', 'fixed': False, 'global': False, 'counties': ['GB-SCT'], 'launchYear': None, 'types': ['Public']}, {'date': '2021-12-27', 'localName': 'Christmas Day', 'name': 'Christmas Day', 'countryCode': 'GB', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}, {'date': '2021-12-28', 'localName': 'Boxing Day', 'name': \"St. Stephen's Day\", 'countryCode': 'GB', 'fixed': False, 'global': True, 'counties': None, 'launchYear': None, 'types': ['Public']}]."], "error_type": "executable_checker:wrong_result", "prompt": {"question": "Can you find the holidays for the year '2018' in the United States (US)? After that, can you also use the same function to find the holidays for the year '2020' in Germany (DE)? Then, can you apply it to find the holidays for the year '2019' in Spain (ES), and finally, can you use it to find the holidays for the year '2021' in the United Kingdom (GB)?", "function": {"name": "retrieve_holiday_by_year", "description": "Finds the holidays of a year.", "parameters": {"type": "dict", "properties": {"year": {"type": "string", "description": "The year of the holidays."}, "country": {"type": "string", "description": "The country of the holidays. Possible options: US, AT, DE, ES, FR, GB, IT, NL, PL, RO, SK, UA."}}, "required": ["year", "country"]}}, "execution_result": [[{"date": "2018-01-01", "localName": "New Year's Day", "name": "New Year's Day", "countryCode": "US", "fixed": false, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2018-01-15", "localName": "Martin Luther King, Jr. Day", "name": "Martin Luther King, Jr. Day", "countryCode": "US", "fixed": false, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2018-02-19", "localName": "Presidents Day", "name": "Washington's Birthday", "countryCode": "US", "fixed": false, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2018-03-30", "localName": "Good Friday", "name": "Good Friday", "countryCode": "US", "fixed": false, "global": false, "counties": ["US-CT", "US-DE", "US-HI", "US-IN", "US-KY", "US-LA", "US-NC", "US-ND", "US-NJ", "US-TN"], "launchYear": null, "types": ["Public"]}, {"date": "2018-03-30", "localName": "Good Friday", "name": "Good Friday", "countryCode": "US", "fixed": false, "global": false, "counties": ["US-TX"], "launchYear": null, "types": ["Optional"]}, {"date": "2018-05-28", "localName": "Memorial Day", "name": "Memorial Day", "countryCode": "US", "fixed": false, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2018-07-04", "localName": "Independence Day", "name": "Independence Day", "countryCode": "US", "fixed": false, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2018-09-03", "localName": "Labor Day", "name": "Labour Day", "countryCode": "US", "fixed": false, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2018-10-08", "localName": "Columbus Day", "name": "Columbus Day", "countryCode": "US", "fixed": false, "global": false, "counties": ["US-AL", "US-AZ", "US-CO", "US-CT", "US-GA", "US-ID", "US-IL", "US-IN", "US-IA", "US-KS", "US-KY", "US-LA", "US-ME", "US-MD", "US-MA", "US-MS", "US-MO", "US-MT", "US-NE", "US-NH", "US-NJ", "US-NM", "US-NY", "US-NC", "US-OH", "US-OK", "US-PA", "US-RI", "US-SC", "US-TN", "US-UT", "US-VA", "US-WV"], "launchYear": null, "types": ["Public"]}, {"date": "2018-11-12", "localName": "Veterans Day", "name": "Veterans Day", "countryCode": "US", "fixed": false, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2018-11-22", "localName": "Thanksgiving Day", "name": "Thanksgiving Day", "countryCode": "US", "fixed": false, "global": true, "counties": null, "launchYear": 1863, "types": ["Public"]}, {"date": "2018-12-25", "localName": "Christmas Day", "name": "Christmas Day", "countryCode": "US", "fixed": false, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}], [{"date": "2020-01-01", "localName": "Neujahr", "name": "New Year's Day", "countryCode": "DE", "fixed": true, "global": true, "counties": null, "launchYear": 1967, "types": ["Public"]}, {"date": "2020-01-06", "localName": "Heilige Drei K\u00f6nige", "name": "Epiphany", "countryCode": "DE", "fixed": true, "global": false, "counties": ["DE-BW", "DE-BY", "DE-ST"], "launchYear": 1967, "types": ["Public"]}, {"date": "2020-03-08", "localName": "Internationaler Frauentag", "name": "International Women's Day", "countryCode": "DE", "fixed": true, "global": false, "counties": ["DE-BE"], "launchYear": 2019, "types": ["Public"]}, {"date": "2020-04-10", "localName": "Karfreitag", "name": "Good Friday", "countryCode": "DE", "fixed": false, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2020-04-12", "localName": "Ostersonntag", "name": "Easter Sunday", "countryCode": "DE", "fixed": false, "global": false, "counties": ["DE-BB", "DE-HE"], "launchYear": null, "types": ["Public"]}, {"date": "2020-04-13", "localName": "Ostermontag", "name": "Easter Monday", "countryCode": "DE", "fixed": false, "global": true, "counties": null, "launchYear": 1642, "types": ["Public"]}, {"date": "2020-05-01", "localName": "Tag der Arbeit", "name": "Labour Day", "countryCode": "DE", "fixed": true, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2020-05-08", "localName": "Tag der Befreiung", "name": "Liberation Day", "countryCode": "DE", "fixed": false, "global": false, "counties": ["DE-BE"], "launchYear": null, "types": ["Public"]}, {"date": "2020-05-21", "localName": "Christi Himmelfahrt", "name": "Ascension Day", "countryCode": "DE", "fixed": false, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2020-05-31", "localName": "Pfingstsonntag", "name": "Pentecost", "countryCode": "DE", "fixed": false, "global": false, "counties": ["DE-BB", "DE-HE"], "launchYear": null, "types": ["Public"]}, {"date": "2020-06-01", "localName": "Pfingstmontag", "name": "Whit Monday", "countryCode": "DE", "fixed": false, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2020-06-11", "localName": "Fronleichnam", "name": "Corpus Christi", "countryCode": "DE", "fixed": false, "global": false, "counties": ["DE-BW", "DE-BY", "DE-HE", "DE-NW", "DE-RP", "DE-SL"], "launchYear": null, "types": ["Public"]}, {"date": "2020-08-15", "localName": "Mari\u00e4 Himmelfahrt", "name": "Assumption Day", "countryCode": "DE", "fixed": true, "global": false, "counties": ["DE-SL"], "launchYear": null, "types": ["Public"]}, {"date": "2020-09-20", "localName": "Weltkindertag", "name": "World Children's Day", "countryCode": "DE", "fixed": true, "global": false, "counties": ["DE-TH"], "launchYear": 2019, "types": ["Public"]}, {"date": "2020-10-03", "localName": "Tag der Deutschen Einheit", "name": "German Unity Day", "countryCode": "DE", "fixed": true, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2020-10-31", "localName": "Reformationstag", "name": "Reformation Day", "countryCode": "DE", "fixed": true, "global": false, "counties": ["DE-BB", "DE-MV", "DE-SN", "DE-ST", "DE-TH", "DE-HB", "DE-HH", "DE-NI", "DE-SH"], "launchYear": null, "types": ["Public"]}, {"date": "2020-11-01", "localName": "Allerheiligen", "name": "All Saints' Day", "countryCode": "DE", "fixed": true, "global": false, "counties": ["DE-BW", "DE-BY", "DE-NW", "DE-RP", "DE-SL"], "launchYear": null, "types": ["Public"]}, {"date": "2020-11-18", "localName": "Bu\u00df- und Bettag", "name": "Repentance and Prayer Day", "countryCode": "DE", "fixed": false, "global": false, "counties": ["DE-SN"], "launchYear": null, "types": ["Public"]}, {"date": "2020-12-25", "localName": "Erster Weihnachtstag", "name": "Christmas Day", "countryCode": "DE", "fixed": true, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2020-12-26", "localName": "Zweiter Weihnachtstag", "name": "St. Stephen's Day", "countryCode": "DE", "fixed": true, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}], [{"date": "2019-01-01", "localName": "A\u00f1o Nuevo", "name": "New Year's Day", "countryCode": "ES", "fixed": true, "global": true, "counties": null, "launchYear": 1967, "types": ["Public"]}, {"date": "2019-01-06", "localName": "D\u00eda de Reyes / Epifan\u00eda del Se\u00f1or", "name": "Epiphany", "countryCode": "ES", "fixed": true, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2019-02-28", "localName": "D\u00eda de Andaluc\u00eda", "name": "Day of Andaluc\u00eda", "countryCode": "ES", "fixed": true, "global": false, "counties": ["ES-AN"], "launchYear": null, "types": ["Public"]}, {"date": "2019-03-01", "localName": "Dia de les Illes Balears", "name": "Day of the Balearic Islands", "countryCode": "ES", "fixed": true, "global": false, "counties": ["ES-IB"], "launchYear": null, "types": ["Public"]}, {"date": "2019-03-19", "localName": "San Jos\u00e9", "name": "St. Joseph's Day", "countryCode": "ES", "fixed": true, "global": false, "counties": ["ES-GA", "ES-PV", "ES-VC"], "launchYear": null, "types": ["Public"]}, {"date": "2019-04-18", "localName": "Jueves Santo", "name": "Maundy Thursday", "countryCode": "ES", "fixed": false, "global": false, "counties": ["ES-AN", "ES-AR", "ES-CL", "ES-CM", "ES-CN", "ES-EX", "ES-GA", "ES-IB", "ES-RI", "ES-MD", "ES-MC", "ES-NC", "ES-AS", "ES-PV", "ES-CB"], "launchYear": null, "types": ["Public"]}, {"date": "2019-04-19", "localName": "Viernes Santo", "name": "Good Friday", "countryCode": "ES", "fixed": false, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2019-04-22", "localName": "Lunes de Pascua", "name": "Easter Monday", "countryCode": "ES", "fixed": false, "global": false, "counties": ["ES-CT", "ES-IB", "ES-RI", "ES-NC", "ES-PV", "ES-VC"], "launchYear": 1642, "types": ["Public"]}, {"date": "2019-04-23", "localName": "D\u00eda de Castilla y Le\u00f3n", "name": "Castile and Le\u00f3n Day", "countryCode": "ES", "fixed": true, "global": false, "counties": ["ES-CL"], "launchYear": null, "types": ["Public"]}, {"date": "2019-04-23", "localName": "San Jorge (D\u00eda de Arag\u00f3n)", "name": "Day of Arag\u00f3n", "countryCode": "ES", "fixed": true, "global": false, "counties": ["ES-AR"], "launchYear": null, "types": ["Public"]}, {"date": "2019-05-01", "localName": "Fiesta del trabajo", "name": "Labour Day", "countryCode": "ES", "fixed": true, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2019-05-02", "localName": "Fiesta de la Comunidad de Madrid", "name": "Day of Madrid", "countryCode": "ES", "fixed": false, "global": false, "counties": ["ES-MD"], "launchYear": null, "types": ["Public"]}, {"date": "2019-05-17", "localName": "D\u00eda das Letras Galegas", "name": "Galician Literature Day", "countryCode": "ES", "fixed": true, "global": false, "counties": ["ES-GA"], "launchYear": null, "types": ["Public"]}, {"date": "2019-05-30", "localName": "D\u00eda de Canarias", "name": "Day of the Canary Islands", "countryCode": "ES", "fixed": true, "global": false, "counties": ["ES-CN"], "launchYear": null, "types": ["Public"]}, {"date": "2019-05-31", "localName": "D\u00eda de la Regi\u00f3n Castilla-La Mancha", "name": "Day of Castilla-La Mancha", "countryCode": "ES", "fixed": true, "global": false, "counties": ["ES-CM"], "launchYear": null, "types": ["Public"]}, {"date": "2019-06-09", "localName": "D\u00eda de La Rioja", "name": "Day of La Rioja", "countryCode": "ES", "fixed": true, "global": false, "counties": ["ES-RI"], "launchYear": null, "types": ["Public"]}, {"date": "2019-06-09", "localName": "D\u00eda de la Regi\u00f3n de Murcia", "name": "Day of Murcia", "countryCode": "ES", "fixed": true, "global": false, "counties": ["ES-MC"], "launchYear": null, "types": ["Public"]}, {"date": "2019-06-20", "localName": "Corpus Christi", "name": "Corpus Christi", "countryCode": "ES", "fixed": false, "global": false, "counties": ["ES-CM"], "launchYear": null, "types": ["Public"]}, {"date": "2019-06-24", "localName": "Sant Joan", "name": "St. John's Day", "countryCode": "ES", "fixed": true, "global": false, "counties": ["ES-CT", "ES-VC"], "launchYear": null, "types": ["Public"]}, {"date": "2019-07-25", "localName": "Santiago Ap\u00f3stol", "name": "Santiago Ap\u00f3stol", "countryCode": "ES", "fixed": true, "global": false, "counties": ["ES-GA", "ES-PV"], "launchYear": null, "types": ["Public"]}, {"date": "2019-07-28", "localName": "D\u00eda de las Instituciones de Cantabria", "name": "Day of the Cantabrian Institutions", "countryCode": "ES", "fixed": true, "global": false, "counties": ["ES-CB"], "launchYear": null, "types": ["Public"]}, {"date": "2019-08-15", "localName": "Asunci\u00f3n", "name": "Assumption", "countryCode": "ES", "fixed": false, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2019-09-08", "localName": "D\u00eda de Asturias", "name": "Day of Asturias", "countryCode": "ES", "fixed": true, "global": false, "counties": ["ES-AS"], "launchYear": null, "types": ["Public"]}, {"date": "2019-09-08", "localName": "D\u00eda de Extremadura", "name": "Day of Extremadura", "countryCode": "ES", "fixed": true, "global": false, "counties": ["ES-EX"], "launchYear": null, "types": ["Public"]}, {"date": "2019-09-11", "localName": "Diada Nacional de Catalunya", "name": "National Day of Catalonia", "countryCode": "ES", "fixed": true, "global": false, "counties": ["ES-CT"], "launchYear": null, "types": ["Public"]}, {"date": "2019-09-15", "localName": "La Bien Aparecida", "name": "Regional Holiday", "countryCode": "ES", "fixed": true, "global": false, "counties": ["ES-CB"], "launchYear": null, "types": ["Public"]}, {"date": "2019-10-09", "localName": "Dia de la Comunitat Valenciana", "name": "Day of the Valencian Community", "countryCode": "ES", "fixed": true, "global": false, "counties": ["ES-VC"], "launchYear": null, "types": ["Public"]}, {"date": "2019-10-12", "localName": "Fiesta Nacional de Espa\u00f1a", "name": "Fiesta Nacional de Espa\u00f1a", "countryCode": "ES", "fixed": true, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2019-11-01", "localName": "D\u00eda de todos los Santos", "name": "All Saints Day", "countryCode": "ES", "fixed": true, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2019-12-06", "localName": "D\u00eda de la Constituci\u00f3n", "name": "Constitution Day", "countryCode": "ES", "fixed": true, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2019-12-08", "localName": "Inmaculada Concepci\u00f3n", "name": "Immaculate Conception", "countryCode": "ES", "fixed": true, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2019-12-25", "localName": "Navidad", "name": "Christmas Day", "countryCode": "ES", "fixed": true, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2019-12-26", "localName": "Sant Esteve", "name": "St. Stephen's Day", "countryCode": "ES", "fixed": true, "global": false, "counties": ["ES-CT"], "launchYear": null, "types": ["Public"]}], [{"date": "2021-01-01", "localName": "New Year's Day", "name": "New Year's Day", "countryCode": "GB", "fixed": false, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2021-01-04", "localName": "New Year's Day", "name": "New Year's Day", "countryCode": "GB", "fixed": false, "global": false, "counties": ["GB-SCT"], "launchYear": null, "types": ["Public"]}, {"date": "2021-03-17", "localName": "Saint Patrick's Day", "name": "Saint Patrick's Day", "countryCode": "GB", "fixed": true, "global": false, "counties": ["GB-NIR"], "launchYear": null, "types": ["Public"]}, {"date": "2021-04-02", "localName": "Good Friday", "name": "Good Friday", "countryCode": "GB", "fixed": false, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2021-04-05", "localName": "Easter Monday", "name": "Easter Monday", "countryCode": "GB", "fixed": false, "global": false, "counties": ["GB-ENG", "GB-WLS", "GB-NIR"], "launchYear": null, "types": ["Public"]}, {"date": "2021-05-03", "localName": "Early May Bank Holiday", "name": "Early May Bank Holiday", "countryCode": "GB", "fixed": false, "global": true, "counties": null, "launchYear": 1978, "types": ["Public"]}, {"date": "2021-05-31", "localName": "Spring Bank Holiday", "name": "Spring Bank Holiday", "countryCode": "GB", "fixed": false, "global": true, "counties": null, "launchYear": 1971, "types": ["Public"]}, {"date": "2021-07-12", "localName": "Battle of the Boyne", "name": "Battle of the Boyne", "countryCode": "GB", "fixed": true, "global": false, "counties": ["GB-NIR"], "launchYear": null, "types": ["Public"]}, {"date": "2021-08-02", "localName": "Summer Bank Holiday", "name": "Summer Bank Holiday", "countryCode": "GB", "fixed": false, "global": false, "counties": ["GB-SCT"], "launchYear": 1971, "types": ["Public"]}, {"date": "2021-08-30", "localName": "Summer Bank Holiday", "name": "Summer Bank Holiday", "countryCode": "GB", "fixed": false, "global": false, "counties": ["GB-ENG", "GB-WLS", "GB-NIR"], "launchYear": 1971, "types": ["Public"]}, {"date": "2021-11-30", "localName": "Saint Andrew's Day", "name": "Saint Andrew's Day", "countryCode": "GB", "fixed": true, "global": false, "counties": ["GB-SCT"], "launchYear": null, "types": ["Public"]}, {"date": "2021-12-27", "localName": "Christmas Day", "name": "Christmas Day", "countryCode": "GB", "fixed": false, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}, {"date": "2021-12-28", "localName": "Boxing Day", "name": "St. Stephen's Day", "countryCode": "GB", "fixed": false, "global": true, "counties": null, "launchYear": null, "types": ["Public"]}]], "execution_result_type": "exact_match"}, "model_result_raw": [{"retrieve_holiday_by_year": "{\"year\": \"2018\", \"country\": \"US\"}"}, {"retrieve_holiday_by_year": "{\"year\": \"2020\", \"country\": \"DE\"}"}, {"retrieve_holiday_by_year": "{\"year\": \"2019\", \"country\": \"ES\"}"}, {"retrieve_holiday_by_year": "{\"year\": \"2021\", \"country\": \"GB\"}"}], "model_result_decoded": ["retrieve_holiday_by_year(year='2018',country='US')", "retrieve_holiday_by_year(year='2020',country='DE')", "retrieve_holiday_by_year(year='2019',country='ES')", "retrieve_holiday_by_year(year='2021',country='GB')"]}
{"id": 44, "model_name": "gpt-3.5-turbo-0125-FC", "test_category": "executable_parallel_function", "valid": false, "error": ["Wrong execution result for: 'calculate_investment_value(initial_investment=1000000,annual_contribution=1000,years=3,annual_return=10,inflation_rate=[1, 4, 4],adjust_for_inflation=True)'. Expected: 1227813.9640000002, but got: 489976000.", "Wrong execution result for: 'calculate_investment_value(initial_investment=500000,annual_contribution=500,years=5,annual_return=7,inflation_rate=[2, 3, 2, 3, 2],adjust_for_inflation=True)'. Expected: 628718.33836, but got: 2699348500.", "Wrong execution result for: 'calculate_investment_value(initial_investment=250000,annual_contribution=2000,years=7,annual_return=5,inflation_rate=[1, 2, 1, 2, 1, 2, 1],adjust_for_inflation=True)'. Expected: 334951.66509394953, but got: 9995790000.", "Wrong execution result for: 'calculate_investment_value(initial_investment=800000,annual_contribution=1500,years=10,annual_return=8,inflation_rate=[1, 2, 1, 2, 1, 2, 1, 2, 1, 2],adjust_for_inflation=True)'. Expected: 1521436.1672706362, but got: 440570400842500."], "error_type": "executable_checker:wrong_result", "prompt": {"question": "Can you calculate the investment value of 1 million initial investment and 1k annual contribution for 3 years, with an interest rate of 10% and an inflation rate of [1%,4%,4%] using the 'calculate_investment_value' function? After that, can you use the same function to calculate the investment value of 500k initial investment and 500 annual contribution for 5 years, with an interest rate of 7% and an inflation rate of [2%,3%,2%,3%,2%]? Then, can you use it to calculate the investment value of 250k initial investment and 2k annual contribution for 7 years, with an interest rate of 5% and an inflation rate of [1%,2%,1%,2%,1%,2%,1%], and finally, can you use it to calculate the investment value of 800k initial investment and 1.5k annual contribution for 10 years, with an interest rate of 8% and an inflation rate of [1%,2%,1%,2%,1%,2%,1%,2%,1%,2%]?", "function": {"name": "calculate_investment_value", "description": "Calculates the value of an investment over time.", "parameters": {"type": "dict", "properties": {"initial_investment": {"type": "integer", "description": "The initial investment amount."}, "annual_contribution": {"type": "float", "description": "The annual contribution amount."}, "years": {"type": "integer", "description": "The number of years to calculate the investment value for."}, "annual_return": {"type": "float", "description": "The annual return rate in percentage."}, "inflation_rate": {"type": "array", "items": {"type": "float"}, "description": "The inflation rate for each year in percentage."}, "adjust_for_inflation": {"type": "boolean", "default": true, "description": "Whether to adjust the investment value for inflation."}}, "required": ["initial_investment", "annual_contribution", "years", "annual_return", "inflation_rate"]}}, "execution_result": [1227813.9640000002, 628718.33836, 334951.66509394953, 1521436.1672706362], "execution_result_type": "exact_match"}, "model_result_raw": [{"calculate_investment_value": "{\"initial_investment\": 1000000, \"annual_contribution\": 1000, \"years\": 3, \"annual_return\": 10, \"inflation_rate\": [1, 4, 4], \"adjust_for_inflation\": true}"}, {"calculate_investment_value": "{\"initial_investment\": 500000, \"annual_contribution\": 500, \"years\": 5, \"annual_return\": 7, \"inflation_rate\": [2, 3, 2, 3, 2], \"adjust_for_inflation\": true}"}, {"calculate_investment_value": "{\"initial_investment\": 250000, \"annual_contribution\": 2000, \"years\": 7, \"annual_return\": 5, \"inflation_rate\": [1, 2, 1, 2, 1, 2, 1], \"adjust_for_inflation\": true}"}, {"calculate_investment_value": "{\"initial_investment\": 800000, \"annual_contribution\": 1500, \"years\": 10, \"annual_return\": 8, \"inflation_rate\": [1, 2, 1, 2, 1, 2, 1, 2, 1, 2], \"adjust_for_inflation\": true}"}], "model_result_decoded": ["calculate_investment_value(initial_investment=1000000,annual_contribution=1000,years=3,annual_return=10,inflation_rate=[1, 4, 4],adjust_for_inflation=True)", "calculate_investment_value(initial_investment=500000,annual_contribution=500,years=5,annual_return=7,inflation_rate=[2, 3, 2, 3, 2],adjust_for_inflation=True)", "calculate_investment_value(initial_investment=250000,annual_contribution=2000,years=7,annual_return=5,inflation_rate=[1, 2, 1, 2, 1, 2, 1],adjust_for_inflation=True)", "calculate_investment_value(initial_investment=800000,annual_contribution=1500,years=10,annual_return=8,inflation_rate=[1, 2, 1, 2, 1, 2, 1, 2, 1, 2],adjust_for_inflation=True)"]}
{"id": 45, "model_name": "gpt-3.5-turbo-0125-FC", "test_category": "executable_parallel_function", "valid": false, "error": ["Wrong execution result for: \"calculate_nutritional_needs(weight=85,height=175,age=40,gender='male',activity_level=5,goal='lose')\". Expected: {'calories': 3495.7188000000006, 'proteins_g': 262.17891000000003, 'fats_g': 97.10330000000002, 'carbohydrates_g': 393.2683650000001}, but got: {'calories': 2995.7188000000006, 'proteins_g': 224.67891000000003, 'fats_g': 83.21441111111113, 'carbohydrates_g': 337.0183650000001}.", "Wrong execution result for: \"calculate_nutritional_needs(weight=70,height=160,age=55,gender='female',activity_level=1,goal='lose')\". Expected: {'calories': 1622.8956, 'proteins_g': 121.71717, 'fats_g': 45.08043333333333, 'carbohydrates_g': 182.57575500000002}, but got: {'calories': 1122.8956, 'proteins_g': 84.21717, 'fats_g': 31.191544444444446, 'carbohydrates_g': 126.32575500000002}."], "error_type": "executable_checker:wrong_result", "prompt": {"question": "Can you calculate the nutritional needs for a male aged 25, weighing 75kg, and 180cm tall with an activity level of 3 and the goal of gaining weight? After that, can you do the same for a female aged 30, weighing 65kg, and 165cm tall with an activity level of 2 and the goal of maintaining weight? Then, can you calculate it for a male aged 40, weighing 85kg, and 175cm tall with an activity level of 5 and the goal of losing weight? Finally, can you calculate the nutritional needs for a female aged 55, weighing 70kg, and 160cm tall with an activity level of 1 and the goal of losing weight?", "function": {"name": "calculate_nutritional_needs", "description": "Calculates the nutritional needs of a person based on their weight, height, age, gender, activity level, and goal.", "parameters": {"type": "dict", "properties": {"weight": {"type": "float", "description": "The weight of the person in kilograms."}, "height": {"type": "float", "description": "The height of the person in centimeters."}, "age": {"type": "float", "description": "The age of the person in years."}, "gender": {"type": "string", "description": "The gender of the person. Possible options [male, female, other]."}, "activity_level": {"type": "float", "description": "The activity level of the person. Possible options [1,2,3,4,5]."}, "goal": {"type": "string", "description": "The goal of the person. Possible options [lose, gain, maintain]."}}, "required": ["weight", "height", "age", "gender", "activity_level", "goal"]}}, "execution_result": [{"calories": 3313.2996, "proteins_g": 248.49746999999996, "fats_g": 92.03609999999999, "carbohydrates_g": 372.746205}, {"calories": 1966.1372499999995, "proteins_g": 147.46029374999995, "fats_g": 54.614923611111095, "carbohydrates_g": 221.19044062499995}, {"calories": 3495.7188000000006, "proteins_g": 262.17891000000003, "fats_g": 97.10330000000002, "carbohydrates_g": 393.2683650000001}, {"calories": 1622.8956, "proteins_g": 121.71717, "fats_g": 45.08043333333333, "carbohydrates_g": 182.57575500000002}], "execution_result_type": "exact_match"}, "model_result_raw": [{"calculate_nutritional_needs": "{\"weight\": 75, \"height\": 180, \"age\": 25, \"gender\": \"male\", \"activity_level\": 3, \"goal\": \"gain\"}"}, {"calculate_nutritional_needs": "{\"weight\": 65, \"height\": 165, \"age\": 30, \"gender\": \"female\", \"activity_level\": 2, \"goal\": \"maintain\"}"}, {"calculate_nutritional_needs": "{\"weight\": 85, \"height\": 175, \"age\": 40, \"gender\": \"male\", \"activity_level\": 5, \"goal\": \"lose\"}"}, {"calculate_nutritional_needs": "{\"weight\": 70, \"height\": 160, \"age\": 55, \"gender\": \"female\", \"activity_level\": 1, \"goal\": \"lose\"}"}], "model_result_decoded": ["calculate_nutritional_needs(weight=75,height=180,age=25,gender='male',activity_level=3,goal='gain')", "calculate_nutritional_needs(weight=65,height=165,age=30,gender='female',activity_level=2,goal='maintain')", "calculate_nutritional_needs(weight=85,height=175,age=40,gender='male',activity_level=5,goal='lose')", "calculate_nutritional_needs(weight=70,height=160,age=55,gender='female',activity_level=1,goal='lose')"]}
{"id": 47, "model_name": "gpt-3.5-turbo-0125-FC", "test_category": "executable_parallel_function", "valid": false, "error": ["Wrong execution result for: \"order_food(item=['dumplings'],quantity=[101],price=[0.1])\". Expected: 10.1, but got: 10.100000000000001."], "error_type": "executable_checker:wrong_result", "prompt": {"question": "A group of friends decided to order various items for their dinner. The first order consists of 101 dumplings at a price of 0.1 dollars each. The second order is for 20 rice bowls at 10 dollars each. The third order includes 50 spring rolls at 0.5 dollars each, and the fourth order is for 10 noodle soups at 3 dollars each. Can you calculate the total price for each order using the 'order_food' function?", "function": {"name": "order_food", "description": "Orders food for a customer.Return the total price.", "parameters": {"type": "dict", "properties": {"item": {"type": "array", "items": {"type": "string"}}, "quantity": {"type": "array", "items": {"type": "integer", "description": "the number of the product purchased."}}, "price": {"type": "array", "items": {"type": "float", "description": "the number of the product purchased."}}}, "required": ["item", "quantity", "price"]}}, "execution_result": [10.1, 200, 25, 30], "execution_result_type": "exact_match"}, "model_result_raw": [{"order_food": "{\"item\": [\"dumplings\"], \"quantity\": [101], \"price\": [0.1]}"}, {"order_food": "{\"item\": [\"rice bowls\"], \"quantity\": [20], \"price\": [10]}"}, {"order_food": "{\"item\": [\"spring rolls\"], \"quantity\": [50], \"price\": [0.5]}"}, {"order_food": "{\"item\": [\"noodle soups\"], \"quantity\": [10], \"price\": [3]}"}], "model_result_decoded": ["order_food(item=['dumplings'],quantity=[101],price=[0.1])", "order_food(item=['rice bowls'],quantity=[20],price=[10])", "order_food(item=['spring rolls'],quantity=[50],price=[0.5])", "order_food(item=['noodle soups'],quantity=[10],price=[3])"]}
{"id": 48, "model_name": "gpt-3.5-turbo-0125-FC", "test_category": "executable_parallel_function", "valid": false, "error": ["Error in execution: \"get_movie_director(movie_name='Pulp Fiction')\". Error: 'Director'", "Error in execution: \"get_movie_director(movie_name='Reservoir Dogs')\". Error: 'Director'", "Error in execution: \"get_movie_director(movie_name='Kill Bill: Volume 1')\". Error: 'Director'", "Error in execution: \"get_movie_director(movie_name='Django Unchained')\". Error: 'Director'"], "error_type": "executable_checker:execution_error", "prompt": {"question": "What's the director of Pulp Fiction? After that, could you find out who directed the movie Reservoir Dogs? Then, can you tell me who directed the movie Kill Bill: Volume 1? Finally, could you look up the director of the movie Django Unchained?", "function": {"name": "get_movie_director", "description": "Fetches the director of a movie from the OMDB API.", "parameters": {"type": "dict", "properties": {"movie_name": {"type": "string", "description": "The name of the movie."}}, "required": ["movie_name"]}}, "execution_result": ["Quentin Tarantino", "Quentin Tarantino", "Quentin Tarantino", "Quentin Tarantino"], "execution_result_type": "pattern_match"}, "model_result_raw": [{"get_movie_director": "{\"movie_name\": \"Pulp Fiction\"}"}, {"get_movie_director": "{\"movie_name\": \"Reservoir Dogs\"}"}, {"get_movie_director": "{\"movie_name\": \"Kill Bill: Volume 1\"}"}, {"get_movie_director": "{\"movie_name\": \"Django Unchained\"}"}], "model_result_decoded": ["get_movie_director(movie_name='Pulp Fiction')", "get_movie_director(movie_name='Reservoir Dogs')", "get_movie_director(movie_name='Kill Bill: Volume 1')", "get_movie_director(movie_name='Django Unchained')"]}
{"id": 49, "model_name": "gpt-3.5-turbo-0125-FC", "test_category": "executable_parallel_function", "valid": false, "error": ["Error in execution: \"get_movie_rating(movie_name='Pulp Fiction')\". Error: 'Rated'", "Error in execution: \"get_movie_rating(movie_name='The Godfather')\". Error: 'Rated'", "Error in execution: 'get_movie_rating(movie_name=\"Schindler\\'s List\")'. Error: 'Rated'", "Error in execution: \"get_movie_rating(movie_name='The Dark Knight')\". Error: 'Rated'"], "error_type": "executable_checker:execution_error", "prompt": {"question": "What's the age limit rating of Pulp Fiction, and then use the same function to find the age limit rating for The Godfather, Schindler's List, and The Dark Knight respectively?", "function": {"name": "get_movie_rating", "description": "Fetches the age rating of a movie from the OMDB API.", "parameters": {"type": "dict", "properties": {"movie_name": {"type": "string", "description": "The name of the movie."}}, "required": ["movie_name"]}}, "execution_result": ["R", "R", "R", "PG-13"], "execution_result_type": "exact_match"}, "model_result_raw": [{"get_movie_rating": "{\"movie_name\": \"Pulp Fiction\"}"}, {"get_movie_rating": "{\"movie_name\": \"The Godfather\"}"}, {"get_movie_rating": "{\"movie_name\": \"Schindler's List\"}"}, {"get_movie_rating": "{\"movie_name\": \"The Dark Knight\"}"}], "model_result_decoded": ["get_movie_rating(movie_name='Pulp Fiction')", "get_movie_rating(movie_name='The Godfather')", "get_movie_rating(movie_name=\"Schindler's List\")", "get_movie_rating(movie_name='The Dark Knight')"]}